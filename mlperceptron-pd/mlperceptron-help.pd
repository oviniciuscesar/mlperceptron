#N canvas 612 25 1624 982 12;
#X obj 605 781 mlperceptron;
#X msg 653 154 size 4 3 6 5 4 2;
#X msg 635 118 size 3 3 4 3 2;
#X msg 670 193 size 5 3 8 6 4 3 2;
#X msg 604 88 size 5 4 8 6 4 3 2;
#X msg 579 54 size 2 2 3 2;
#X msg 351 330 0.45 0.29 0 1;
#X msg 704 246 weight;
#X text 772 74 <-- size: nº de camadas (escondidas + saída) \, dimensão dos dados de entrada \, nº de neurônios em cada camada, f 39;
#X msg 950 432 training \$1;
#X obj 950 408 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X text 1042 431 <-- Modo de treinamento (0 = OFF \, 1 = ON), f 24;
#X msg 952 482 reset;
#X text 1004 480 <-- reseta os parâmetros da rede para o padrão (taxa de aprendizagem \, max epoch e training mode) e inicializa os pesos e bias com valores aleatórios (0-1);
#X msg 961 585 learning \$1;
#X floatatom 961 561 6 0 0 0 - - - 0;
#X text 1011 562 <-- taxa de aprendizado (0-1);
#X msg 965 704 epochs \$1;
#X floatatom 964 674 5 0 0 0 - - - 0;
#X text 1007 669 <-- númeor máximo de épocas de treinamento, f 30;
#X obj 605 859 print out;
#X msg 1051 730 datasize 75;
#X obj 686 856 print weights;
#X obj 738 834 print bias;
#X text 758 342 <-- retorna os vetores de bias no outlet 2;
#X msg 996 308 af softmax 1 sigmoid 2;
#X msg 975 255 af tahn 1 softmax 2 sigmoid 3 relu 4 softmax 5;
#X msg 725 341 bias;
#X text 758 246 <-- retorna linha por linha das matrizes de pesos de cada camada no outlet 2, f 23;
#X text 1140 728 <-- quantidade de exemplos de treinamento;
#X text 449 327 <-- dados de entrada + classes (nº de classes deve ser = ao nº de neurônios da camada de saída), f 18;
#X msg 166 109 random 0 0.4 -0.5 0.5;
#X text 324 108 <-- Inicializa as matrizes de pesos e vetores de bias com valores aleatórios dentro de um intervalo específicado individualmente (intervalo dos pesos \, iontervalo dos biases), f 29;
#X msg 222 664 he;
#X msg 221 693 xavier;
#X text 35 659 métodos de inicialização aleatória da matriz de pesos -->, f 23;
#X msg 221 637 uniform;
#X msg 30 254 write data/modelo.txt;
#X text 192 249 <-- salva o modleo treinado em um arquivo de texto, f 16;
#X msg 220 726 lecun;
#X msg 27 322 read data/modelo.txt;
#X text 177 321 <-- carrega o modelo salvo em um arquivo de texto, f 16;
#X obj 686 804 route weight bias error;
#X text 1314 254 <-- Atribui funções de ativação para cada camada individualmente (nome da função e nº da camada) [sigmoid \, relu \, prelu \, tanh \, softplus \, softmax (apenas na última camada)], f 29;
#X msg 1040 793 evaluation \$1;
#X obj 1040 768 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X text 1141 795 <-- Modo de avaliação (0 = OFF \, 1 = ON), f 22;
#X connect 0 0 20 0;
#X connect 0 1 42 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 9 0 0 0;
#X connect 10 0 9 0;
#X connect 12 0 0 0;
#X connect 14 0 0 0;
#X connect 15 0 14 0;
#X connect 17 0 0 0;
#X connect 18 0 17 0;
#X connect 21 0 0 0;
#X connect 25 0 0 0;
#X connect 26 0 0 0;
#X connect 27 0 0 0;
#X connect 31 0 0 0;
#X connect 33 0 0 0;
#X connect 34 0 0 0;
#X connect 36 0 0 0;
#X connect 37 0 0 0;
#X connect 39 0 0 0;
#X connect 40 0 0 0;
#X connect 42 0 22 0;
#X connect 42 1 23 0;
#X connect 44 0 0 0;
#X connect 45 0 44 0;
